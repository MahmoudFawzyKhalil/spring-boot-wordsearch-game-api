class e{wordSelectMode=!1;selectedItems=[];firstSelectedItem;gridArea=null;words=[];foundWords=[];getCellsInRange(e,t){let r=[];if(e.y===t.y){if(e.x===t.x)return r;e.x>t.x&&([t,e]=[e,t]);for(let s=e.x;s<=t.x;s++)r.push(this.gridArea.querySelector(`td[data-x="${s}"][data-y="${t.y}"]`))}else if(e.x===t.x){if(e.y===t.y)return r;e.y>t.y&&([t,e]=[e,t]);for(let s=e.y;s<=t.y;s++)r.push(this.gridArea.querySelector(`td[data-x="${t.x}"][data-y="${s}"]`))}else if(t.x-e.x==t.y-e.y){if(e.x===t.x)return r;if(e.y===t.y)return r;e.y>t.y&&([t,e]=[e,t]);for(let s=0;s<=t.y-e.y;s++)r.push(this.gridArea.querySelector(`td[data-x="${e.x+s}"][data-y="${e.y+s}"]`))}else if(t.x-e.x==e.y-t.y){if(e.x===t.x)return r;if(e.y===t.y)return r;e.y<t.y&&([t,e]=[e,t]);for(let s=0;s<=t.x-e.x;s++)r.push(this.gridArea.querySelector(`td[data-x="${e.x+s}"][data-y="${e.y-s}"]`))}return r}renderGrid(e,t){this.gridArea=document.querySelector(".grid-area"),""!==this.gridArea.innerHTML&&(this.gridArea.innerHTML="");const r=document.createElement("table"),s=document.createElement("tbody");let d=0;for(let r=0;r<e;r++){const i=document.createElement("tr");for(let s=0;s<e;s++){const e=document.createElement("td"),a=t[d++],o=document.createTextNode(a);e.appendChild(o),e.setAttribute("data-x",s),e.setAttribute("data-y",r),e.setAttribute("data-letter",a),i.appendChild(e)}s.appendChild(i)}r.appendChild(s),this.gridArea.appendChild(r),r.addEventListener("mousedown",(e=>{if(!e.target.closest("td"))return;this.wordSelectMode=!0;const t=e.target,r=+t.dataset.x,s=+t.dataset.y;this.firstSelectedItem={x:r,y:s}})),r.addEventListener("mousemove",(e=>{if(this.wordSelectMode){if(!e.target.closest("td"))return;const t=e.target,r=+t.dataset.x,s=+t.dataset.y;this.selectedItems.forEach((e=>e.classList.remove("selected"))),this.selectedItems=this.getCellsInRange(this.firstSelectedItem,{x:r,y:s}),this.selectedItems.forEach((e=>e.classList.add("selected")))}})),r.addEventListener("mouseup",(e=>{this.wordSelectMode=!1;const t=this.selectedItems.reduce(((e,t)=>e+t.dataset.letter),""),r=t.split("").reverse().join("");-1!==this.words.indexOf(t)?(this.foundWords.push(t),this.selectedItems=[]):-1!==this.words.indexOf(r)?(this.foundWords.push(r),this.selectedItems=[]):this.selectedItems.forEach((e=>e.classList.remove("selected")))}))}}document.querySelector(".submit-word").addEventListener("click",(async function(){const t=new e,r=document.querySelector(".words-input").value,s=document.querySelector(".grid-size-input").value;if(!r||!s){return void(document.querySelector(".grid-area").innerHTML='<h1 class="error">Please enter comma-separated list of words and a grid size</h1>')}const d=await async function(e,t){const r=await fetch(`http://localhost:8080/wordgrid?gridSize=${e}&wordList=${t}`),s=await r.text();return s.split(" ").filter((e=>"\r\n"!=e&&""!=e))}(s,r);t.words=r.toUpperCase().split(","),t.renderGrid(s,d)}));
//# sourceMappingURL=index.146caf5d.js.map
